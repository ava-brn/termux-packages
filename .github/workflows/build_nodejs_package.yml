name: Build Node.js package

on:
  push:
    tags:
      - "*"

jobs:
  node-runtime-builder:
    strategy:
      matrix:
        arch: [aarch64, arm, x86_64]
    runs-on: ubuntu-latest
    timeout-minutes: 600
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Build OpenSSL and Node.js, package things
        uses: addnab/docker-run-action@v3
        with:
          image: dockitava/package-builder:latest
          options: -v ${{ github.workspace }}:/home/builder/termux-packages
          run: |
            id -u
            echo "chown madness start.."
            sudo chown -R $(id -u) /home/builder
            sudo chown -R $(id -u) /data
            sudo usermod -u $(id -u) builder
            sudo groupmod -g $(id -g) builder
            echo "chown madness done.."

            mkdir -p /home/builder/termux-packages/_out/node
            mkdir -p /home/builder/termux-packages/_out/libs

            echo "# Build packages - this takes a loooong time!"
            cd /home/builder/termux-packages
            # build for different architectures:
            # - aarch64 (arm 64bit)
            # - arm (arm 32bit)
            # - i686
            # - x86_64
            ./build-package.sh -a ${{ matrix.arch }} -q nodejs

            echo "# Unpack Node.js & rename"
            cd /home/builder/termux-packages/_out
            cp -f /home/builder/termux-packages/output/node* ./
            ar x ./node*.deb data.tar.xz
            unxz -v data.tar.xz
            tar xvf data.tar
            cp -rf ./data/data/com.termux/files/usr/bin/node ./node/node.exe
            ls -al ./node
            env

      - name: Post build
        run: |
          ls -al
          sudo chown -R $(id -u) ./_out

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref }}-${{ matrix.arch }}-${{github.sha}}
          files: |
            ./_out/node/node.exe
